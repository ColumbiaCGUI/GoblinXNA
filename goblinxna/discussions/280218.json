[
  {
    "Id": "701069",
    "ThreadId": "280218",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I'm trying to do a very simple application with Newton Physics engine. I have a ground and 2 boxes (red one and green one).&nbsp;<span>I followed the steps</span>&nbsp;<span>of Tutorial</span><span>5 (Goblin XNA 4.0 version), I don't think that I forgot\r\n something.</span></p>\r\n<p>When I try to collide two boxes, the two boxes overlap:</p>\r\n<p><img src=\"http://img827.imageshack.us/img827/2396/appkq.png\" alt=\"\"></p>\r\n<p>&nbsp;</p>\r\n<p>This is the code I have used:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> Initialize()\r\n{\r\n    <span style=\"color:blue\">base</span>.Initialize();\r\n    <span style=\"color:blue\">this</span>.IsMouseVisible = <span style=\"color:blue\">true</span>;\r\n    State.InitGoblin(graphics, Content, <span style=\"color:#a31515\">&quot;&quot;</span>);\r\n\r\n    scene = <span style=\"color:blue\">new</span> Scene();\r\n    scene.BackgroundColor = Color.CornflowerBlue;\r\n    scene.PhysicsEngine = <span style=\"color:blue\">new</span> NewtonPhysics();\r\n    scene.PhysicsEngine.Gravity = 30;\r\n\r\n    CreateLights();\r\n    CreateCamera();\r\n    CreateObjects();\r\n}\r\n\r\n<span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> CreateObjects()\r\n{\r\n    <span style=\"color:blue\">this</span>.ground = <span style=\"color:blue\">new</span> MyObject(<span style=\"color:#a31515\">&quot;Ground&quot;</span>, <span style=\"color:blue\">new</span> Box(15, 0.1f, 15), Color.DarkBlue, Vector3.Zero, 0, Vector3.One);\r\n    <span style=\"color:blue\">this</span>.scene.RootNode.AddChild(<span style=\"color:blue\">this</span>.ground.RootNode);\r\n    <span style=\"color:blue\">this</span>.ground.Physics.Collidable = <span style=\"color:blue\">true</span>;\r\n    <span style=\"color:blue\">this</span>.ground.Physics.Shape = GoblinXNA.Physics.ShapeType.Box;\r\n\r\n    <span style=\"color:blue\">this</span>.box1 = <span style=\"color:blue\">new</span> MyObject(<span style=\"color:#a31515\">&quot;Box 1&quot;</span>, <span style=\"color:blue\">new</span> Box(1, 1, 1), Color.Red, <span style=\"color:blue\">new</span> Vector3(1, 0.5f, 0), 0, Vector3.One);\r\n    <span style=\"color:blue\">this</span>.scene.RootNode.AddChild(<span style=\"color:blue\">this</span>.box1.RootNode);\r\n    <span style=\"color:blue\">this</span>.box1.Physics.Collidable = <span style=\"color:blue\">true</span>;\r\n    <span style=\"color:blue\">this</span>.box1.Physics.Interactable = <span style=\"color:blue\">true</span>;\r\n    <span style=\"color:blue\">this</span>.box1.Physics.Mass = 20;\r\n    <span style=\"color:blue\">this</span>.box1.Physics.Shape = GoblinXNA.Physics.ShapeType.Box;\r\n    <span style=\"color:blue\">this</span>.box1.Physics.InitialLinearVelocity = Vector3.Left;\r\n\r\n    <span style=\"color:blue\">this</span>.box2 = <span style=\"color:blue\">new</span> MyObject(<span style=\"color:#a31515\">&quot;Box 2&quot;</span>, <span style=\"color:blue\">new</span> Box(1, 1, 1), Color.Green, <span style=\"color:blue\">new</span> Vector3(-1, 0.5f, 0), 0, Vector3.One);\r\n    <span style=\"color:blue\">this</span>.scene.RootNode.AddChild(<span style=\"color:blue\">this</span>.box2.RootNode);\r\n    <span style=\"color:blue\">this</span>.box2.Physics.Collidable = <span style=\"color:blue\">true</span>;\r\n    <span style=\"color:blue\">this</span>.box2.Physics.Interactable = <span style=\"color:blue\">true</span>;\r\n    <span style=\"color:blue\">this</span>.box2.Physics.Mass = 10;\r\n    <span style=\"color:blue\">this</span>.box2.Physics.Shape = GoblinXNA.Physics.ShapeType.Box;\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>In MyObject class I have encapsulate a TransformNode and GeometryNode (I do&nbsp;AddToPhysicsEngine here):</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> MyObject\r\n{\r\n    <span style=\"color:blue\">protected</span> BranchNode rootNode;\r\n    <span style=\"color:blue\">public</span> BranchNode RootNode { <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>.rootNode; } }\r\n\r\n    <span style=\"color:blue\">protected</span> BranchNode lastNode;\r\n    <span style=\"color:blue\">public</span> BranchNode LastNode { <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>.lastNode; } }\r\n\r\n    <span style=\"color:blue\">protected</span> GeometryNode objectNode;\r\n    <span style=\"color:blue\">protected</span> TransformNode objectTransNode;\r\n\r\n    <span style=\"color:blue\">protected</span> <span style=\"color:blue\">float</span> beginRotation, rotationAngle;\r\n    <span style=\"color:blue\">protected</span> Vector3 traslation;\r\n\r\n    <span style=\"color:blue\">public</span> GoblinXNA.Physics.IPhysicsObject Physics { <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>.objectNode.Physics; } }\r\n\r\n    \r\n    <span style=\"color:blue\">public</span> MyObject(<span style=\"color:blue\">string</span> name, PrimitiveModel model, Color color, Vector3 traslation, <span style=\"color:blue\">float</span> beginRotation, Vector3 scale)\r\n    {\r\n        <span style=\"color:blue\">this</span>.beginRotation = beginRotation;\r\n        <span style=\"color:blue\">this</span>.rotationAngle = beginRotation;\r\n        <span style=\"color:blue\">this</span>.traslation = traslation;\r\n\r\n        <span style=\"color:blue\">this</span>.objectNode = <span style=\"color:blue\">new</span> GeometryNode(name);\r\n        <span style=\"color:blue\">this</span>.objectNode.Model = model;\r\n        <span style=\"color:blue\">this</span>.objectNode.AddToPhysicsEngine = <span style=\"color:blue\">true</span>;\r\n\r\n        Material material = <span style=\"color:blue\">new</span> Material();\r\n        material.Diffuse = color.ToVector4();\r\n        material.Specular = Color.White.ToVector4();\r\n        material.SpecularPower = 1;\r\n\r\n        <span style=\"color:blue\">this</span>.objectNode.Material = material;\r\n\r\n        <span style=\"color:blue\">this</span>.objectTransNode = <span style=\"color:blue\">new</span> TransformNode();\r\n        <span style=\"color:blue\">this</span>.objectTransNode.Translation = <span style=\"color:blue\">this</span>.traslation;\r\n        <span style=\"color:blue\">this</span>.objectTransNode.Scale = scale;\r\n        <span style=\"color:blue\">this</span>.objectTransNode.Rotation = Quaternion.CreateFromAxisAngle(<span style=\"color:blue\">new</span> Vector3(0, 1, 0), <span style=\"color:blue\">this</span>.rotationAngle);\r\n\r\n        <span style=\"color:blue\">this</span>.rootNode = <span style=\"color:blue\">this</span>.objectTransNode;\r\n        <span style=\"color:blue\">this</span>.objectTransNode.AddChild(<span style=\"color:blue\">this</span>.objectNode);\r\n        <span style=\"color:blue\">this</span>.lastNode = <span style=\"color:blue\">this</span>.objectNode;\r\n    }\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>I move the red box with keyboard arrows and change this.objectTransNode.Traslation property.</p>\r\n<p>Thank you for help</p>\r\n",
    "PostedDate": "2011-11-21T01:22:30.28-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "701448",
    "ThreadId": "280218",
    "Html": "<p>Newton doesn't work properly if you move them unrealistically. In real world, you don't \"transport\" things, but you move objects with force and torque. If you use keypress to change their positions, that means you're \"transporting\" them. If you apply force and torques to move them, it will work correctly. If you want objects to transport and still behave somewhat realistically, you need to use Havok with their keyframe features.</p>\r\n<p>Ohan</p>",
    "PostedDate": "2011-11-21T13:15:01.43-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "701704",
    "ThreadId": "280218",
    "Html": "<p>Hello <strong>Ohan</strong>,</p>\n<p>Thank you for your help. I have been searching about force and torque, and I found something in <strong>Tutorial12</strong>. But I have a question, when is the<strong>&nbsp;NewtonApplyForceAndTorque</strong> callback function called? <span class=\"hps\">It seems</span>&nbsp;<span class=\"hps\">that if the</span>&nbsp;<span class=\"hps\">object is not moving</span><span class=\"hps\">, the callback function</span>&nbsp;<span class=\"hps\">is not called.</span></p>\n<p><span class=\"hps\">I have added new lines in CreateObjects function:</span></p>\n<div style=\"color: black; background-color: white;\">\n<pre>((NewtonPhysics)scene.PhysicsEngine).SetApplyForceAndTorqueCallback(<span style=\"color: blue;\">this</span>.box1.Physics, <span style=\"color: blue;\">new</span> Newton.NewtonApplyForceAndTorque(<span style=\"color: blue;\">this</span>.Function1));\n((NewtonPhysics)scene.PhysicsEngine).SetApplyForceAndTorqueCallback(<span style=\"color: blue;\">this</span>.box2.Physics, <span style=\"color: blue;\">new</span> Newton.NewtonApplyForceAndTorque(<span style=\"color: blue;\">this</span>.Function2));\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>The callbacks (very simples):</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">private</span> Vector3 forces1 = <span style=\"color: blue;\">new</span> Vector3(0, -9.8f, 0);\n\n<span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> Funcion1(IntPtr pNewtonBody)\n{\n    <span style=\"color: blue;\">float</span>[] force = Vector3Helper.ToFloats(<span style=\"color: blue;\">this</span>.forces1);\n    Newton.NewtonBodySetForce(pNewtonBody, force);\n}\n\n<span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> Funcion2(IntPtr pNewtonBody)\n{\n    <span style=\"color: blue;\">float</span>[] force = Vector3Helper.ToFloats(<span style=\"color: blue;\">new</span> Vector3(0, -9.8f, 0));\n    Newton.NewtonBodySetForce(pNewtonBody, force);\n}\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>In the <strong>Update</strong> method:</p>\n<div style=\"color: black; background-color: white;\">\n<pre>KeyboardState keyboard = Keyboard.GetState();\n<span style=\"color: blue;\">if</span> (keyboard.IsKeyDown(Keys.Up))\n    <span style=\"color: blue;\">this</span>.forces1.X -= 1;\n<span style=\"color: blue;\">if</span> (keyboard.IsKeyDown(Keys.Down))\n    <span style=\"color: blue;\">this</span>.forces1.X += 1;\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>When I press Up arrow, forces1.X is incremented.</p>\n<p>Also I have changed the translation of the boxes to <strong>Y = 1</strong>, s<span class=\"hps\">o I can</span>&nbsp;<span class=\"hps\">see</span>&nbsp;<span class=\"hps\">how they fall</span>&nbsp;<span class=\"hps\">to the ground.</span></p>\n<p><span class=\"hps\">OK, now&nbsp;<span class=\"hps\">I expose</span>&nbsp;<span class=\"hps\">two cases.</span> When I press the up arrow key</span><span class=\"hps\">&nbsp;while</span>&nbsp;<span class=\"hps\">the red box (box1)</span>&nbsp;<span class=\"hps\">is falling,</span>&nbsp;<span class=\"hps\">the  red box</span>&nbsp;<span class=\"hps\">begins to move</span>&nbsp;<span class=\"hps\">to the left</span>&nbsp;<span class=\"hps\">hitting the&nbsp;</span><span class=\"hps\">green box (box2). This is good.</span>&nbsp;<span class=\"hps\">However,</span>&nbsp;<span class=\"hps\">when I start</span>&nbsp;<span class=\"hps\">the  application,</span>&nbsp;<span class=\"hps\">if I let</span>&nbsp;<span class=\"hps\">the red box</span>&nbsp;<span class=\"hps\">fall to the ground</span>&nbsp;<span class=\"hps\">until it is&nbsp;</span><span class=\"hps atn\">stopped (</span><span>after</span>&nbsp;<span class=\"hps\">a few</span>&nbsp;<span class=\"hps\">jumps)</span>&nbsp;<span class=\"hps\">and  then press</span>&nbsp;<span class=\"hps\">the up arrow key, the</span>&nbsp;<span class=\"hps\">red box</span>&nbsp;<span class=\"hps\">does not move.</span>&nbsp;<span class=\"hps\">Why?</span></p>",
    "PostedDate": "2011-11-22T03:44:33.383-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "701993",
    "ThreadId": "280218",
    "Html": "<p>There are two possibilities:</p>\r\n<p>1. Your force is too small that it won't move it (try a really big force to see if this is the case)</p>\r\n<p>2. An object that's not moving is put into sleep mode by Newton for optimization (you can set the physics property, NeverDeactivate to disable the sleep), so you need to wake it up. I forgot the exact function name, but you should be able to find it from the API reference (i haven't prepared one for 4.0 yet, so you need to look into the code)</p>\r\n<p>Ohan</p>",
    "PostedDate": "2011-11-22T13:28:33.003-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "703268",
    "ThreadId": "280218",
    "Html": "<p>Hello Ohan,</p>\r\n<p>I wrote that in CreateObject function and works perfect:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">this</span>.box1.Physics.NeverDeactivate = <span style=\"color: blue;\">true</span>;\r\n<span style=\"color: blue;\">this</span>.box2.Physics.NeverDeactivate = <span style=\"color: blue;\">true</span>;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Thank you!!</p>",
    "PostedDate": "2011-11-25T00:27:41.72-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]