[
  {
    "Id": "255252",
    "ThreadId": "74588",
    "Html": "<p>Hi Ohan,</p>\r\n<p>I've tried to add the spaceship model from Tutorial 2 into Tutorial 12 by modifying the VehicleCreator class. The problem is that when I change the scale, the model still appears with its original size. It seems it's ignoring the scale factor. It only recognizes the rotation and translation. Why is this happening? This is what I did:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> VehicleCreator\r\n    {\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> RaceCar AddRaceCar(Scene scene, TransformNode parentTrans)\r\n        {\r\n            TransformNode transNode = <span style=\"color:Blue\">new</span> TransformNode();\r\n            transNode.Translation = <span style=\"color:Blue\">new</span> Vector3(0, 10, 10);\r\n            transNode.Scale = <span style=\"color:Blue\">new</span> Vector3(0.005f, 0.005f, 0.005f);\r\n\r\n            <span style=\"color:Green\">/*Material carMat = new Material();\r\n            carMat.Diffuse = Color.Pink.ToVector4();\r\n            carMat.Specular = Color.White.ToVector4();\r\n            carMat.SpecularPower = 10;*/</span>\r\n\r\n            ModelLoader loader = <span style=\"color:Blue\">new</span> ModelLoader();\r\n            Model carModel = (Model)loader.Load(<span style=\"color:#A31515\">&quot;&quot;</span>, <span style=\"color:#A31515\">&quot;p1_wedge&quot;</span>);\r\n\r\n            GeometryNode carNode = <span style=\"color:Blue\">new</span> GeometryNode(<span style=\"color:#A31515\">&quot;Race Car&quot;</span>);\r\n            <span style=\"color:Green\">//carNode.Model = new Box(3, 1.0f, 2);</span>\r\n            carNode.Model = carModel;\r\n            carNode.Model.UseInternalMaterials = <span style=\"color:Blue\">true</span>;\r\n            <span style=\"color:Green\">//carNode.Material = carMat;</span>\r\n            carNode.Model.CastShadows = <span style=\"color:Blue\">true</span>;\r\n            carNode.Model.ReceiveShadows = <span style=\"color:Blue\">true</span>;\r\n\r\n            NewtonPhysics physicsEngine = (NewtonPhysics)scene.PhysicsEngine;\r\n\r\n            RaceCar car = <span style=\"color:Blue\">new</span> RaceCar(carNode, physicsEngine);\r\n            <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">int</span> i = 0; i &lt; 4; i++)\r\n                car.Tires[i] = CreateTire((TireID)Enum.ToObject(<span style=\"color:Blue\">typeof</span>(TireID), i), \r\n                    car.TireTransformNode[i], carNode, scene.PhysicsEngine.Gravity);\r\n\r\n            car.Collidable = <span style=\"color:Blue\">true</span>;\r\n            car.Interactable = <span style=\"color:Blue\">true</span>;\r\n\r\n            carNode.Physics = car;\r\n            carNode.Physics.NeverDeactivate = <span style=\"color:Blue\">true</span>;\r\n            carNode.AddToPhysicsEngine = <span style=\"color:Blue\">true</span>;\r\n\r\n            parentTrans.AddChild(transNode);\r\n            transNode.AddChild(carNode);\r\n\r\n            Newton.NewtonSetBodyLeaveWorldEvent(physicsEngine.NewtonWorld,\r\n                car.LeaveWorldCallback);\r\n\r\n            <span style=\"color:Blue\">return</span> car;\r\n        }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Thanks,</p>\r\n<p>Emerson</p>",
    "PostedDate": "2009-11-09T14:22:34.177-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "255469",
    "ThreadId": "74588",
    "Html": "<p>Hi Emerson,</p>\r\n<p>Scaling the models for either NetwonVehicle or NewtonTire is a little more complicated.</p>\r\n<p>Since Newton does not consider the scaling factor of the transformation, I do this scaling internally in NewtonPhysics and store a table of scaling factors for all of the added IPhysicsObject including NewtonVehicle.&nbsp;</p>\r\n<p>For any IPhysicsObject other than NewtonVehicle, I re-scale the transformation got back from Newton in the default transform callback I defined in NewtonPhysics, but since you're supposed define your own transform callback for NewtonVehicle, this scaling factor is not applied unless you apply the scaling yourself in the callback.&nbsp;</p>\r\n<p>To do this, first add a function called GetScale in NewtonPhysics.cs in the Goblin XNA framework:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> Vector3 GetScale(IntPtr body)\r\n{\r\n    <span style=\"color:Blue\">if</span> (scaleTable.ContainsKey(body))\r\n        <span style=\"color:Blue\">return</span> scaleTable[body];\r\n    <span style=\"color:Blue\">else</span>\r\n        <span style=\"color:Blue\">return</span> Vector3.One;\r\n}\r\n</pre>\r\n</div>\r\n<p>Then, modify line 72 in the transform callback for the car in RaceCar.cs as following:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>Matrix mat = Matrix.CreateScale(engine.GetScale(body)) * MatrixHelper.FloatsToMatrix(matrix);\r\n</pre>\r\n</div>\r\n<p>I updated the SVN repository to deal with car model scaling, so you can also get the modified code from SVN (NewtonPhysics.cs and RaceCar.cs)</p>\r\n<p>For re-scaling the tire models, I need to investigate a little more since it can be more complicated, so for now, it's best to use the original size of the tire model (rescale it using a modeling software like GoogleSketchUp if necessary).</p>\r\n<p>Ohan</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-10T04:51:46.837-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "255576",
    "ThreadId": "74588",
    "Html": "<p>Thanks Ohan, it worked!</p>\r\n<p>Also I would like to know how can I reset all objects values when two of them collide. For example, I am developing a system which controls robots and I'm trying to simulate a soccer match between them. So, when one of the robots scores, the ball should be moved to its start position in the middle of the field and the robots should be moved to each side of the field, facing each other, just like in the real world. What I tried to do is create a collision pair and a collision callback function called when the pair collides</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>NewtonPhysics.CollisionPair goalsphere1 = <span style=\"color:Blue\">new</span> NewtonPhysics.CollisionPair(goalNode1.Physics, sphereNode.Physics);\r\n            ((NewtonPhysics)scene.PhysicsEngine).AddCollisionCallback(goalsphere1, GoalSphereCollision1);\r\n\r\nAnd my callback function do the following:<br><br><span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> GoalSphereCollision1(NewtonPhysics.CollisionPair goalsphere1)\r\n        {\r\n            <span style=\"color:Blue\">if</span> (goalsphere1.ContactPoints &gt; 0)\r\n                score1++;\r\n            Console.WriteLine(<span style=\"color:#A31515\">&quot;Robot 2 &quot;</span> + score1);\r\n\r\n            Matrix mat = robot.CompoundInitialWorldTransform;\r\n            Matrix mat1 = robot1.CompoundInitialWorldTransform;\r\n            Matrix mat2 = sphereNode.Physics.CompoundInitialWorldTransform;\r\n            \r\n            ((NewtonPhysics)scene.PhysicsEngine).SetTransform(robot, mat);\r\n            ((NewtonPhysics)scene.PhysicsEngine).SetTransform(robot1, mat1);\r\n            ((NewtonPhysics)scene.PhysicsEngine).SetTransform(sphereNode.Physics, mat2);\r\n        }\r\n<br>robot is based on RaceCar.cs and VehicleCreator.cs. So to add a robot I just do this:<br><div style=\"color:Black;background-color:White\"><pre>robot = <span style=\"color:#000000\">VehicleCreator</span>.AddRobot(scene, parentTransNode);<br></pre>\r\n</div>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>All objects are moved to the right place but they still have physics values assigned to them. I need to reset all the values so they don't keep appearing just in the right place but with no acceleration applied on them too. Since my code just move them but do not reset the values, next thing I tried was to restart simulation, so the code changed to this:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> GoalSphereCollision2(NewtonPhysics.CollisionPair goalsphere2)\r\n        {\r\n            <span style=\"color:Blue\">if</span> (goalsphere2.ContactPoints &gt; 0)\r\n                score2++;\r\n            Console.WriteLine(<span style=\"color:#A31515\">&quot;Robot 1 &quot;</span> + score2);         \r\n\r\n            ((NewtonPhysics)scene.PhysicsEngine).RestartsSimulation();\r\n        }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>At first I thought it solved my problem but making the ball collides twice gave me a KeyNotFoundException in NewtonPhysics.cs at</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Gray\">        ///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> Gets the velocity of an IPhysicsObject.</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;param name=&quot;physObj&quot;&gt;</span><span style=\"color:Green\">The physics object to get velocity&lt;/param&gt;</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;returns&gt;</span><span style=\"color:Green\">A velocity vector&lt;/returns&gt;</span>\r\n        <span style=\"color:Blue\">public</span> Vector3 GetVelocity(IPhysicsObject physObj)<br>        {<br>            <span style=\"color:Blue\">float</span>[] speed = <span style=\"color:Blue\">new</span> <span style=\"color:Blue\">float</span>[3];<br>            Newton.NewtonBodyGetVelocity(objectIDs[physObj], speed); <span style=\"color:#0000ff\">&lt;- (this is where the exception is detected)</span>                                  <br>            <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">new</span> Vector3(speed[0], speed[1], speed[2]);<br>        }<br><br>How can I move my objects to its original place with its original physics values, something like a reset function?<br><br>Thanks,<br><br>Emerson <br></pre>\r\n</div>\r\n</p>",
    "PostedDate": "2009-11-10T09:13:59.043-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "255698",
    "ThreadId": "74588",
    "Html": "<p>Hi Emerson,</p>\r\n<p>You're doing right to call RestartSimulation() to reset the physics simulation.</p>\r\n<p>However, the problem is that in RestartSimulation(), it removes all of the physics object from the engine, and re-add them back to the engine with initial values.&nbsp;</p>\r\n<p>It is possible that GetVelocity (I guess you're calling this somewhere in your code?) is called while things and removed from the engine, and not re-added back to the engine yet, so it can't find the key in the engine yet. Update and Draw functions are in separate thread, so this kind of problem can happen.</p>\r\n<p>What you should do is to make sure that you don't call GetVelocity while the physics engine is restarting. This can be done by using a semaphore around RestartSimulation() code. Another way is to simply try and catch your code that calls GetVelocity method. In this case, I believe it's in the GetSpeed method of RaceCar.cs if you didn't change it much.</p>\r\n<p>Ohan</p>",
    "PostedDate": "2009-11-10T13:55:19.1-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "256406",
    "ThreadId": "74588",
    "Html": "<p>Hi Ohan,</p>\r\n<p>&nbsp;</p>\r\n<p>Since I didn't change much tutorial 12, I believe SetTireTorque and SetSteering in Draw function, which calls GetSpeed method, may be called before RestartSimulation() finishes re-adding all physics objects back to the engine. However, I'm not familiar with try/catch or semaphores so I'm not sure how to use them in the code to avoid the problem. I tried something like this:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">float</span> GetSpeed()\r\n        {\r\n            <span style=\"color:Blue\">try</span>\r\n            {\r\n                <span style=\"color:Blue\">return</span> Vector3.Dot(<span style=\"color:Blue\">this</span>.PhysicsWorldTransform.Forward, engine.GetVelocity(<span style=\"color:Blue\">this</span>));\r\n            }\r\n            <span style=\"color:Blue\">catch</span> (KeyNotFoundException)\r\n            {\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>And Visual Studio gives me this error:</p>\r\n<p>'Sistema_de_controle.Robot.GetSpeed()': not all code paths return a value</p>\r\n<p>Forgot to mention that I'm mixing elements from Tutorial 8 and Tutorial 12, therefore, on CreateObjects() I created a collision pair and a collision callback function to be called when two objects collides, which is the</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> GoalSphereCollision2(NewtonPhysics.CollisionPair goalsphere2)\r\n</pre>\r\n</div>\r\n</p>\r\n<p>This function is similar to the one used in Tutorial 8, called when the the sphere and box model collides, but instead of just writting a message on the console, I'm also calling RestartsSimulation(). That's what I'm using from Tutorial 8. As for Tutorial 12, my Draw function verifies if I'm pressing Up or Down arrow from keyboard to set values for SetSteering and SetTireTorque. I think this is what causes the KeyNotFoundException. Probably while things are being re-added to the engine, the Draw function is trying to get speed values from SetSteering and SetTireTorque which are not in the engine yet. I just don't know how to isolate RestartsSimulation() so it can re-add everything to the engine before Draw function gets in.</p>\r\n<p>Thanks</p>\r\n<p>Emerson</p>",
    "PostedDate": "2009-11-12T09:48:08.307-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "256419",
    "ThreadId": "74588",
    "Html": "<p>GetSpeed() needs a return value, but you don't have a return when exception is caught, so simply add &quot;return 0;&quot; statement in your catch close.</p>\r\n<p>Ohan</p>",
    "PostedDate": "2009-11-12T10:21:16.123-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "256730",
    "ThreadId": "74588",
    "Html": "<p>Hi Ohan,</p>\r\n<p>Thanks.</p>\r\n<p>It's sort of working now. But after a few tests with the program its FPS drops from 50 to 7, and runs like in a slow motion video, it's as if something is missing. I'll test some more to see if I get an error from visual studio.</p>\r\n<p>Emerson</p>",
    "PostedDate": "2009-11-13T06:03:33.073-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "257183",
    "ThreadId": "74588",
    "Html": "<p>Hi Emerson,</p>\r\n<p>Hmm... I don't know what's the cause of the frame drops since I haven't experienced it yet. It'll be great if you could figure out what's causing that, and I can probably try to fix that if there is a problem in Goblin.</p>\r\n<p>Ohan</p>",
    "PostedDate": "2009-11-14T21:49:32.46-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "259479",
    "ThreadId": "74588",
    "Html": "<p>Hi Ohan,</p>\r\n<p>I`ve added a semaphore and resolved the problem.</p>\r\n<p>Now I would like to know how can I change a model during gameplay, for example, based on the code posted at the beginning of this topic for the VehicleCreator class where I've added the p1_wedge model for the car, which steps should I take to change from the ship model to another model without having to quit the game? I was thinking about using the radio button component from 2D GUI to select the models. If a radio button is selected then a new model should appear immediately.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>&nbsp;</p>\r\n<p>Emerson</p>",
    "PostedDate": "2009-11-21T22:06:42.133-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "259834",
    "ThreadId": "74588",
    "Html": "<p>If you simply want to have a different &quot;look&quot;, it's better to create another RaceCar object that contains different set of models, and switch between those different RaceCar based on your radio button input. I didn't expect people to switch the car model, so it may not work if you simply switch the Model property to something else. It may render correct, but the new physical properties may not get correctly propagated to the physics engine.</p>\r\n<p>&nbsp;</p>\r\n<p>Ohan</p>",
    "PostedDate": "2009-11-23T07:44:15.757-08:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "522872",
    "ThreadId": "74588",
    "Html": "\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>emersonmk wrote:</strong><br>\r\n<p>Hi Ohan,</p>\r\n<p>I`ve added a semaphore and resolved the problem.</p>\r\n<p>Now I would like to know how can I change a model during gameplay, for example, based on the code posted at the beginning of this topic for the VehicleCreator class where I've added the p1_wedge model for the car, which steps should I take to change from\r\n the ship model to another model without having to quit the game? I was thinking about using the radio button component from 2D GUI to select the models. If a radio button is selected then a new model should appear immediately.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>&nbsp;</p>\r\n<p>Emerson</p>\r\n</blockquote>\r\n<p>I am having a similar problem with fps and physics callbacks. How did you fix this with a semaphore?</p>\r\n",
    "PostedDate": "2010-11-16T11:41:54.917-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]