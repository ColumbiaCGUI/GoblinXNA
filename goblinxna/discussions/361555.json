[
  {
    "Id": "856005",
    "ThreadId": "361555",
    "Html": "\r\n<p>Hi ohan, I know maybe that is not the right place to ask for help about socket in xna, but I try to make a question in the xna official forum of microsoft but nobody answer me.&nbsp;</p>\r\n<p>I have to create a socket in xna where the client(written in c&#43;&#43;) send the values of cameraPose of a device. The xna server read them and displays on the screen. Besides, I display also the rgb video stream of the camera device.</p>\r\n<p>So far, i've created this function:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> StartListeningSync()\n        {\n            <span style=\"color:green\">// Data buffer for incoming data.</span>\n            <span style=\"color:blue\">byte</span>[] bytes = <span style=\"color:blue\">new</span> Byte[1024];\n\n            <span style=\"color:green\">// Establish the local endpoint for the socket.</span>\n            <span style=\"color:green\">// Dns.GetHostName returns the name of the </span>\n            <span style=\"color:green\">// host running the application.</span>\n            IPHostEntry ipHostInfo = Dns.Resolve(Dns.GetHostName());\n            <span style=\"color:green\">//IPAddress ipAddress = ipHostInfo.AddressList[0];</span>\n            IPEndPoint localEndPoint = <span style=\"color:blue\">new</span> IPEndPoint(IPAddress.Parse(<span style=\"color:#a31515\">&quot;127.0.0.1&quot;</span>), 4000);\n\n            <span style=\"color:green\">// Create a TCP/IP socket.</span>\n            Socket listener = <span style=\"color:blue\">new</span> Socket(AddressFamily.InterNetwork,\n                SocketType.Stream, ProtocolType.Tcp);\n            \n            <span style=\"color:green\">// Bind the socket to the local endpoint and </span>\n            <span style=\"color:green\">// listen for incoming connections.</span>\n\n        \n            <span style=\"color:blue\">try</span>{\n                \n                listener.Bind(localEndPoint);\n                listener.Listen(10);\n\n                <span style=\"color:green\">// Start listening for connections.</span>\n                <span style=\"color:green\">// while (true)</span>\n                <span style=\"color:green\">// {</span>\n                Console.WriteLine(<span style=\"color:#a31515\">&quot;Waiting for a connection...&quot;</span>);\n                <span style=\"color:green\">// Program is suspended while waiting for an incoming connection.</span>\n                Socket handler = listener.Accept();\n                 \n                        connesso = <span style=\"color:blue\">true</span>;\n                        Console.WriteLine(<span style=\"color:#a31515\">&quot;connesso&quot;</span>);\n                   \n                <span style=\"color:green\">// An incoming connection needs to be processed.</span>\n                  <span style=\"color:blue\">while</span> (<span style=\"color:blue\">true</span>)\n                    {\n                        bytes = <span style=\"color:blue\">new</span> <span style=\"color:blue\">byte</span>[1024];\n                        <span style=\"color:blue\">int</span> bytesRec = handler.Receive(bytes);\n                        content = System.BitConverter.ToSingle(bytes, 0);\n                        prova = content * 4;\n                     \n                        <span style=\"color:green\">// Show the data on the console.</span>\n                        Console.WriteLine(<span style=\"color:#a31515\">&quot;Text received : {0}&quot;</span> &#43; content &#43; <span style=\"color:#a31515\">&quot;     e prodotto &quot;</span> &#43; prova);\n                   }\n                    \n                }\n            <span style=\"color:blue\">catch</span> (Exception e)\n            {\n                Console.WriteLine(e.ToString());\n            }\n\n    }\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>I put it into the update() method and seems it works, as a matter of fact It can read the data from the client; but, it stops the rest of the program. In short, while the socket is open and read the data, the rgb video doesn't start. Besides, I can't wait\r\n the end of the connection, because the values of camera pose are always updated. So, I would like to display both the rgb and the data from the client in real time.&nbsp;</p>\r\n<p>Where or how do you suggest me to insert the socket in a xna project?&nbsp;</p>\r\n<p>I'm asking you because I noticed that you know xna framework very well and maybe you can help me! :D</p>\r\n<p>&nbsp;</p>\r\n<p>cheers</p>\r\n<p>&nbsp;</p>\r\n<p>salvo</p>\r\n",
    "PostedDate": "2012-07-01T08:33:38.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "857029",
    "ThreadId": "361555",
    "Html": "<p>Well, Socket programming in .NET has nothing to do with XNA, so you may want to separate your problem from XNA. You should first test your C# server application with your C++ client application to make sure that your Socket programming is correct (that it doesn't cause the program to stop). You may also want to write out your image data to disk to make sure it shows an image captured by the video camera.</p>\r\n<p>Ohan</p>",
    "PostedDate": "2012-07-03T13:30:50.92-07:00",
    "UserRole": "Owner",
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "857059",
    "ThreadId": "361555",
    "Html": "<p>thanks for replying. ok, so I have to separate the two situation. However, I need the values of position of the camera sent by the client because I would like to draw a virtual object on to the rgb video. If I don't tell to xna that the camera(device) is moving, the object will always be in the same position of the window.</p>\r\n<p>More or less As you have done in dominoAr: if i move the camera closer to the dominos, they become bigger. In my case, there wouldn't be any marker, and the position of the camera would be already determinated by the client program.</p>\r\n<p>cheers</p>\r\n<p>&nbsp;</p>\r\n<p>salvo</p>",
    "PostedDate": "2012-07-03T14:47:27.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]