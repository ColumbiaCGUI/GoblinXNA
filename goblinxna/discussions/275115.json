[
  {
    "Id": "681302",
    "ThreadId": "275115",
    "Html": "\r\n<p>Hi, I my project don't recognize the ToolBarTracker, can you help me with that?</p>\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> CreateObjectArrow()\r\n        {\r\n            ModelLoader loader = <span style=\"color:blue\">new</span> ModelLoader();\r\n\r\n            <span style=\"color:green\">//Spï¿½cification de mon modele</span>\r\n            Model arrowModel = (Model)loader.Load(@path&#43;<span style=\"color:#a31515\">&quot;\\\\Content\\\\Arrow\\\\&quot;, &quot;</span>Arrow&quot;);\r\n            arrowModel.UseInternalMaterials = <span style=\"color:blue\">true</span>;\r\n            arrowModel.CastShadows = <span style=\"color:blue\">true</span>;\r\n            arrowModel.ReceiveShadows = <span style=\"color:blue\">true</span>;\r\n            <span style=\"color:green\">// Create a geometry node with a model of a box that will be overlaid on</span>\r\n            <span style=\"color:green\">// top of the ground marker array initially. (When the toolbar marker array is</span>\r\n            <span style=\"color:green\">// detected, it will be overlaid on top of the toolbar marker array.)</span>\r\n            Arrow = <span style=\"color:blue\">new</span> GeometryNode();\r\n            Arrow.Model = arrowModel;\r\n            \r\n            <span style=\"color:green\">// Add this box model to the physics engine for collision detection</span>\r\n            Arrow.AddToPhysicsEngine = <span style=\"color:blue\">true</span>;\r\n            Arrow.Physics.Shape = ShapeType.Box;\r\n            <span style=\"color:green\">// Make this box model cast and receive shadows</span>\r\n            Arrow.Model.CastShadows = <span style=\"color:blue\">true</span>;\r\n            Arrow.Model.ReceiveShadows = <span style=\"color:blue\">true</span>;\r\n\r\n\r\n            <span style=\"color:green\">// Create a marker node to track a toolbar marker array.</span>\r\n            toolBarMarker = <span style=\"color:blue\">new</span> MarkerNode(scene.MarkerTracker, <span style=\"color:#a31515\">&quot;Toolbar.txt&quot;</span>);\r\n\r\n            scene.RootNode.AddChild(toolBarMarker);\r\n\r\n            transNodeArrow = <span style=\"color:blue\">new</span> TransformNode();\r\n            transNodeArrow.Scale = <span style=\"color:blue\">new</span> Vector3(9f, 9f, 9f);\r\n            transNodeArrow.Translation = <span style=\"color:blue\">new</span> Vector3(0, 0, 15);\r\n            transNodeArrow.Rotation = Quaternion.CreateFromAxisAngle(Vector3.UnitX, 190);\r\n            transNodeArrow.Rotation *= Quaternion.CreateFromAxisAngle(Vector3.UnitY, 190);\r\n\r\n            <span style=\"color:green\">// Create a material to apply to the box model</span>\r\n            Material boxMaterial = <span style=\"color:blue\">new</span> Material();\r\n            boxMaterial.Diffuse = <span style=\"color:blue\">new</span> Vector4(0.5f, 0, 0, 1);\r\n            boxMaterial.Specular = Color.White.ToVector4();\r\n            boxMaterial.SpecularPower = 10;\r\n\r\n            Arrow.Material = boxMaterial;\r\n\r\n            <span style=\"color:green\">// Add this box model node to the ground marker node</span>\r\n            groundMarker.AddChild(transNodeArrow);\r\n            transNodeArrow.AddChild(Arrow);\r\n\r\n            <span style=\"color:green\">// Create a collision pair and add a collision callback function that will be</span>\r\n            <span style=\"color:green\">// called when the pair collides</span>\r\n            NewtonPhysics.CollisionPair pair = <span style=\"color:blue\">new</span> NewtonPhysics.CollisionPair(Arrow.Physics, gandalfNode.Physics);\r\n            NewtonPhysics.CollisionPair pair2 = <span style=\"color:blue\">new</span> NewtonPhysics.CollisionPair(Arrow.Physics, sauronNode.Physics);\r\n            ((NewtonPhysics)scene.PhysicsEngine).AddCollisionCallback(pair, ArrowGandalfCollision);\r\n            ((NewtonPhysics)scene.PhysicsEngine).AddCollisionCallback(pair2, ArrowSauronCollision);\r\n        }\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2011-10-07T07:09:51.977-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "684092",
    "ThreadId": "275115",
    "Html": "<p>Your code seems OK. &nbsp;Can you be more specific of what you are trying to do and what happens when you run your program?</p>\r\n<p>The piece of code you've posted adds a MarkerNode to the scene, but doesn't attach any children to it. &nbsp;For something to be attached to the marker visually, you'll either have to add children to it or do something with it in your Draw/Update functions. &nbsp;For example, in Tutorial 8, Ohan checks if the marker is detected inside the Draw loop and then applies a transform to an object so that it looks like the object is attached to the marker. &nbsp;Speaking of Tutorial 8, can you use the toolbar to interact with the scene?</p>\r\n<p>By the way, all angles are defined as radians in XNA, in the line \"Quaternion.CreateFromAxisAngle(Vector3.UnitX, 190);\" it seems like you were trying to rotate by 190 degrees. &nbsp;You can use the&nbsp;MathHelper.ToRadians method to convert degrees to radians.</p>",
    "PostedDate": "2011-10-13T19:22:41.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "693279",
    "ThreadId": "275115",
    "Html": "<p>Thanks for the angle, I didn't attach any object yet, I have in my Draw :</p>\r\n<p>&nbsp;</p>\r\n<p>if (groundMarker.MarkerFound)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>if (toolBarMarker.MarkerFound)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>{</p>\r\n<p>}&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>I put a breakpoint in the toolbarMarker's if. but when I show the groundMarker and the toolBar to the camera, it doesn't recognize my toolBar...only my ground.</p>\r\n<p>Thanks!</p>",
    "PostedDate": "2011-11-03T06:14:09.13-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]