[
  {
    "Id": "1043293",
    "ThreadId": "443576",
    "Html": "Hello,\r<br />\n<br />\nI'm trying to know when 2 models are collided with the highest precision, ie when the triangles are overlapped.\r<br />\nI generated two meshes (format fbx) from google sketchup and I want to know when theses objects are collided.\r<br />\nI don't use MarkerNode as it is not an AR application.\r<br />\nI searched on different discussions but i did not find any available solution.\r<br />\n<br />\nI initialized my Physisc engine as Tutorial 5 and then my code is more or less like this :<br />\n<pre><code>void initialize()\n{\n         //Object1 creation  \n          Model model = (Model)_modelLoader.Load(&quot;&quot;, &quot;myModel1&quot;);\n            _model1 = new GeometryNode(&quot;Model1&quot;);\n            _model1.Model = model;\n            ((Model)_model1.Model).UseInternalMaterials = true;\n            ((Model)_model1.Model).UseLighting = true;\n            _model1.Physics.Shape = GoblinXNA.Physics.ShapeType.TriangleMesh;\n            _model1.Physics.Pickable = true;\n            _model1.AddToPhysicsEngine = true;\n            _model1.Physics.Collidable = true;    \n\n         //Object2 creation  \n            model = (Model)_modelLoader.Load(&quot;&quot;, &quot;myModel2&quot;);\n            _model2 = new GeometryNode(&quot;Model2&quot;);\n            _model2 .Model = model;\n            ((Model)_model2 .Model).UseInternalMaterials = true;\n            ((Model)_model2 .Model).UseLighting = true;\n            _model2 .Physics.Shape = GoblinXNA.Physics.ShapeType.TriangleMesh;\n            _model2 .Physics.Pickable = true;\n            _model2 .AddToPhysicsEngine = true;\n            _model2 .Physics.Collidable = true;  \n\n            NewtonPhysics.CollisionPair pair = new NewtonPhysics.CollisionPair(_model1.Physics, _model2 .Physics);\n            ((NewtonPhysics)_scene.PhysicsEngine).AddCollisionCallback(pair, onCollision);\n\n          ..... /*add to transformeNode and to the scene */\n}\n\nvoid onCollision(NewtonPhysics.CollisionPair pair)\n{\n            UI2DRenderer.WriteText(new Vector2(100, 100), &quot;COLLISION&quot;, Color.Black, _font);\n}\n\nvoid update()\n{\n/* here I change my object transformation and update the scene*/\n}\n\nvoid draw()\n{\n            ((NewtonPhysics)_scene.PhysicsEngine).SetTransform(_model1.Physics, _model1.WorldTransformation);\n            ((NewtonPhysics)_scene.PhysicsEngine).SetTransform(_model2.Physics, _model2.WorldTransformation);\n\n/* here I draw the scene */\n}\n</code></pre>\n\nMy problem is, I never enter onCollision() method. Nonetheless, it works when I replace\r<br />\n<br />\n_model .Physics.Shape = GoblinXNA.Physics.ShapeType.TriangleMesh;\r<br />\nby\r<br />\n_model.Physics.Shape = GoblinXNA.Physics.ShapeType.Box;\r<br />\n<br />\n<br />\nFor additional information the picking method and the shadow map work perfectly with those objects, that is why I suppose they are correct.\r<br />\n<br />\n<br />\nI also set the boolean at True of &quot;scene.RenderCollisionMesh&quot; and here you have a screenshot of the result.\r<br />\n<br />\n<img src=\"https://dl.dropboxusercontent.com/u/59089779/collision.png\" alt=\"Image\" />\r<br />\n<br />\n<br />\nPlease if you have an idea about this problem, let me know!\r<br />\nThank you very much.<br />\n",
    "PostedDate": "2013-05-14T03:34:50.907-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]